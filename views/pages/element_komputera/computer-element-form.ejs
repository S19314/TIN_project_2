<%- include('../../fragments/header.ejs')%>
    <main>


        <script type="application/javascript;charset=utf-8" src="/public/js/validationCommon.js"> </script>
        <script type="application/javascript;charset=utf-8"
            src="../../../public/js/validationKomputerElement.js"></script>

        <script>
            function resetErrors(inputs, errorTexts, errorInfo) {
                for (let i = 0; i < inputs.length; i++) {
                    inputs[i].classList.remove("error_input"); // Możliwe tutaj musze być "error-input"? // Изменил с error_input, на error-input
                }

                for (let i = 0; i < errorTexts.length; i++) {
                    errorTexts[i].innerText = "";
                }
                errorInfo.innerText = "";
            }

            function checkRequired(value) {
                if (!value) {
                    return false;
                }
                value = value.toString().trim();
                if (value === "") {
                    return false;
                }
                return true;
            }

            function checkTextLengthRange(value, min, max) {
                if (!value) {
                    return false;
                }
                value = value.toString().trim();
                const length = value.length;
                if (max && length > max) {
                    return false;
                }

                if (min && length < min) {
                    return false;
                }

                return true;
            }

            function checkDateIfAfter(value, compareTo) {
                if (!value) {
                    return false;
                }

                if (!compareTo) {
                    return false;
                }


                const valueDate = new Date(value);
                // valueDate = valueDate.setDate(value);
                const compareToDate = new Date(compareTo);
                // compareToDate = compareToDate.setDate(compareTo);

                if (valueDate.getTime() <= compareToDate.getTime()) { // Верно ли сравнивает? Мб сравнивает часы в сутках ( от 0 до 23 )
                    return false;
                }

                return true;
            }

            function checkNumber(value) {
                if (!value) {
                    return false;
                }

                if (isNaN(value)) {
                    return false;
                }

                return true;
            }

            function checkNumberRange(value, min, max) {
                if (!value) {
                    return false;
                }
                if (isNaN(value)) {
                    return false;
                }
                value = parseFloat(value);
                if (value < min) {
                    return false;
                }
                if (value > max) {
                    return false;
                }

                return true;
            }


            function checkDate(value) {
                if (!value) {
                    return false;
                }
                const pattern = /(\d{4})-(\d{2})-(\d{2})/;
                return pattern.test(value);
            }




            function validateForm() {
                const nazwaInput = document.getElementById('nazwa');
                const opisInput = document.getElementById('opis')
                const fotoInputInput = document.getElementById('fotoInput');

                const errorNazwa = document.getElementById('errorNazwa');
                const errorOpis = document.getElementById('errorOpis');
                const errorFotoInput = document.getElementById('errorFotoInput');

                const errorSummary = document.getElementById('errorSummary');

                resetErrors([nazwaInput, opisInput, fotoInputInput], [errorNazwa, errorOpis, errorFotoInput], errorSummary);

                var valid = true;

                if (!checkRequired(nazwaInput.value)) {
                    valid = false;
                    nazwaInput.classList.add("error-input");
                    errorNazwa.innerText = "Pole jest wymagane";
                } else if (!checkTextLengthRange(nazwaInput.value, 2, 60)) {
                    valid = false;
                    nazwaInput.classList.add("error-input");
                    errorNazwa.innerText = "Pole powinno zawierać od 2 do 60 znaków";
                }

                if (!checkRequired(opisInput.value)) {
                    valid = false;
                    opisInput.classList.add("error-input");
                    errorOpis.innerText = "Pole jest wymagane";
                } else if (!checkTextLengthRange(opisInput.value, 2, 1000)) {
                    valid = false;
                    opisInput.classList.add("error-input");
                    errorOpis.innerText = "Pole powinno zawierać od 2 do 1000 znaków";
                }

                if (!checkRequired(fotoInputInput.value)) {
                    valid = false;
                    fotoInputInput.classList.add("error-input");
                    errorFotoInput.innerText = "Pole jest wymagane";
                }

                if (!valid) {
                    errorSummary.innerText = "Formularz zawiera błędy";
                }
                return valid;
            }
        </script>
        <h1>
            <%=pageTitle%>
        </h1>
        <form class="form" method="POST" enctype="multipart/form-data" action="<%=formAction%>" novalidate>
            <!-- novalidate onsubmit="return validateForm();" -->
            <input type="hidden" name="_id" value="<%= element._id %>">
            <label for="nazwa">Nazwa:<abbr title="required" aria-label="required"
                    class="errors-text">*</abbr></abbr></label>
            <input class="<%= validationErrors.find(elem => elem.path.includes('nazwa')) ? 'error-input' : '' %>"
                type="text" name="nazwa" id="nazwa" value="<%= element.nazwa %>" <%=(formMode=='showDetails'
                )? 'disabled' :''%> >

            <span id="errorNazwa" class="errors-text">
                <% if (validationErrors.find(elem=> elem.path.includes('nazwa'))) { %>
                    <%= validationErrors.find(elem=> elem.path.includes('nazwa')).message %>
                        <% } %>
            </span>

            <label for="opis">Opis:<abbr title="required" aria-label="required">*</abbr></abbr></label>
            <textarea class="<%= validationErrors.find(elem => elem.path.includes('opis')) ? 'error-input' : '' %>"
                cols="40" rows="8" name="opis" id="opis" <%=(formMode=='showDetails' ) ? 'disabled' : ''
                %>><%=element.opis%></textarea>
            <span id="errorOpis" class="errors-text">
                <% if (validationErrors.find(elem=> elem.path.includes('opis'))) { %>
                    <%= validationErrors.find(elem=> elem.path.includes('opis')).message %>
                        <% } %>
            </span>


            <label for="fotoInput">Foto:<abbr title="required" aria-label="required">*</abbr></abbr></label>
            <%if (formMode=='showDetails' || formMode=='edit' ) {%>
                <div>
                    <img src="<%=element.foto_path %>" alt="foto <%=element.foto_path%>" class="form-opis-foto">
                </div>
                <% } %>
                    <!-- name="foto" изменить на "foto_path"? -->
                    <!-- <input type="file" name="foto" id="fotoInput" value="<%=element.foto_path%>" -->
                    <input type="file" name="foto" id="fotoInput" value="<%=element.foto_path %>"
                        <%=(formMode=='showDetails' ) ? 'disabled' : '' %>>
                    <!--
                    <input type="text" name="foto_path" id="fotoInput" value="<%=element.foto_path%>"
                        <%=(formMode=='showDetails' ) ? 'disabled' : '' %>/>
                    -->

                    <span id="errorFotoInput" class="errors-text">
                        <% if (validationErrors.find(elem=> elem.path.includes('fotoFile'))) { %>
                            <%= validationErrors.find(elem=> elem.path.includes('fotoFile')).message %>
                                <% } %>
                    </span>
                    <!--
                    <% if (formMode=='showDetails' ) { %>
                        <div class="form-buttons">
                        </div>
                        <% } %>
                        -->
                    <!-- Это типа не нужно? 
                            <div class="form-buttons">
                                <p id="errorSummary" class="errors-text"></p>
                                <input type="submit" value="Dodaj" class="form-button-submit" />
                                <a href="computer-element-list.html" class="form-button-cancel">Anuluj</a>
                            </div>
                        -->
                    <div class="form-buttons">
                        <p id="errorSummary" class="errors-text"></p>
                        <% if (formMode !='showDetails' ) { %>
                            <input class="form-button-submit" type="submit" value="<%=btnLabel%>" />
                            <a class="form-button-cancel" href="/komputer-element">Anuluj</a>
                            <% } else { %>
                                <a href="/komputer-element/edit/<%=element._id%>"
                                    class="list-actions-button-edit">Edytuj</a>
                                <a class="list-actions-button-details" href="/komputer-element">Powrót</a>
                                <!-- form-button-cancel => list-actions-button-details -->
                                <% } %>
                    </div>
        </form>
        <% if (formMode=='showDetails' || formMode=='edit' ) { %>
            <h2>
                Szczegóły zestawa elementa i komputera
            </h2>
            <table class="table-list">
                <thead>
                    <tr>
                        <th>
                            Model Komputera
                        </th>
                        <th>
                            Aktualna temperatura elementa w kopmputerze
                        </th>
                        <th>
                            Procent wykorzystanych komputerzem zasobów elementa
                        </th>
                        <th>
                            Aktualna szybkość przekazania dannych między elementem komputera a komputerą
                        </th>
                        <th>
                            Typ połączenia
                        </th>
                    </tr>
                </thead>
                <tbody>

                    <% for (let z_e_k of element.zestaw_elementow_komputera) { %>
                        <tr>
                            <!-- zestaw-komputera-element -->
                            <td><a href="/komputers/details/<%=z_e_k.komputer._id%>">
                                    <%=z_e_k.komputer.model%>
                                </a></td>
                            <td>
                                <%=z_e_k.aktuakna_Temperatura%>
                            </td>
                            <td>
                                <%=z_e_k.procent_Wykorzystanych_Zasobow%>
                            </td>
                            <td>
                                <%=z_e_k.aktualna_Szybkosc_Przekazania_Danych%>
                            </td>
                            <td>
                                <%=z_e_k.typPolaczenia%>
                            </td>
                        </tr>
                        <% } %>

                </tbody>
            </table>
            <% } %>

    </main>
    <%- include('../../fragments/footer.ejs')%>